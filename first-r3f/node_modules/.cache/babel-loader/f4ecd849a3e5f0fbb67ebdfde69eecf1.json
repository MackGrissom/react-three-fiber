{"ast":null,"code":"var _jsxFileName = \"/home/mackgrissom/code/MackGrissom/react3fiber/first-r3f/src/Experience.js\",\n    _s = $RefreshSig$();\n\nimport { useFrame, extend, useThree } from '@react-three/fiber';\nimport { useRef } from 'react';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls: OrbitControls\n});\nexport default function Experience() {\n  _s();\n\n  const {\n    camera,\n    gl\n  } = useThree();\n  const cubeRef = useRef();\n  const groupRef = useRef();\n  useFrame((state, delta) => {\n    cubeRef.current.rotation.y += delta; // groupRef.current.rotation.y += delta\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"orbitControls\", {\n      args: [camera, gl.domElement]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: groupRef,\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        \"position-x\": -2,\n        children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: \"orange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: cubeRef,\n        \"rotation-y\": Math.PI * 0.25,\n        \"position-x\": 2,\n        scale: 1.5,\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: \"mediumpurple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      \"position-y\": -1,\n      \"rotation-x\": -Math.PI * 0.5,\n      scale: 10,\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"greenyellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Experience, \"Mw8If3CKM8R3LSXUjyc5J/pJJD4=\", false, function () {\n  return [useThree, useFrame];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useFrame","extend","useThree","useRef","OrbitControls","Experience","camera","gl","cubeRef","groupRef","state","delta","current","rotation","y","domElement","Math","PI"],"sources":["/home/mackgrissom/code/MackGrissom/react3fiber/first-r3f/src/Experience.js"],"sourcesContent":["import { useFrame, extend, useThree } from '@react-three/fiber'\nimport { useRef } from 'react'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nextend({ OrbitControls: OrbitControls })\n\nexport default function Experience() {\n    const {camera, gl}= useThree()\n    const cubeRef = useRef()\n    const groupRef = useRef()\n    useFrame((state, delta) => {\n\n        cubeRef.current.rotation.y += delta\n        // groupRef.current.rotation.y += delta\n    })\n\n    return <>\n        <orbitControls args={[camera, gl.domElement]} />\n<directionalLight/>\n        <group ref={groupRef} >\n            <mesh position-x={- 2}>\n                <sphereGeometry />\n                <meshStandardMaterial color=\"orange\" />\n            </mesh>\n\n            <mesh ref={cubeRef} rotation-y={Math.PI * 0.25} position-x={2} scale={1.5}>\n                <boxGeometry />\n                <meshStandardMaterial color=\"mediumpurple\" />\n            </mesh>\n        </group>\n        <mesh position-y={- 1} rotation-x={- Math.PI * 0.5} scale={10}>\n            <planeGeometry />\n            <meshStandardMaterial color=\"greenyellow\" />\n        </mesh>\n    </>\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,QAA2C,oBAA3C;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,2CAA9B;;;AACAH,MAAM,CAAC;EAAEG,aAAa,EAAEA;AAAjB,CAAD,CAAN;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACjC,MAAM;IAACC,MAAD;IAASC;EAAT,IAAcL,QAAQ,EAA5B;EACA,MAAMM,OAAO,GAAGL,MAAM,EAAtB;EACA,MAAMM,QAAQ,GAAGN,MAAM,EAAvB;EACAH,QAAQ,CAAC,CAACU,KAAD,EAAQC,KAAR,KAAkB;IAEvBH,OAAO,CAACI,OAAR,CAAgBC,QAAhB,CAAyBC,CAAzB,IAA8BH,KAA9B,CAFuB,CAGvB;EACH,CAJO,CAAR;EAMA,oBAAO;IAAA,wBACH;MAAe,IAAI,EAAE,CAACL,MAAD,EAASC,EAAE,CAACQ,UAAZ;IAArB;MAAA;MAAA;MAAA;IAAA,QADG,eAEX;MAAA;MAAA;MAAA;IAAA,QAFW,eAGH;MAAO,GAAG,EAAEN,QAAZ;MAAA,wBACI;QAAM,cAAY,CAAE,CAApB;QAAA,wBACI;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAsB,KAAK,EAAC;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI;QAAM,GAAG,EAAED,OAAX;QAAoB,cAAYQ,IAAI,CAACC,EAAL,GAAU,IAA1C;QAAgD,cAAY,CAA5D;QAA+D,KAAK,EAAE,GAAtE;QAAA,wBACI;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAsB,KAAK,EAAC;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG,eAcH;MAAM,cAAY,CAAE,CAApB;MAAuB,cAAY,CAAED,IAAI,CAACC,EAAP,GAAY,GAA/C;MAAoD,KAAK,EAAE,EAA3D;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAsB,KAAK,EAAC;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAdG;EAAA,gBAAP;AAmBH;;GA7BuBZ,U;UACAH,Q,EAGpBF,Q;;;KAJoBK,U"},"metadata":{},"sourceType":"module"}